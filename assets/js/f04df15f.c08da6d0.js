"use strict";(self.webpackChunkai_blog=self.webpackChunkai_blog||[]).push([[130],{5023:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"vid2avatar","metadata":{"permalink":"/ai-blog/blog/vid2avatar","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/paper-reviews/2023-06-29-vid2avatar.md","source":"@site/blog/paper-reviews/2023-06-29-vid2avatar.md","title":"Paper Review - 3D Avatar Reconstruction from Videos in the Wild via Self-supervised Scene Decomposition \u200b","description":"Today, I\'m going to review the paper for this CVPR 2023, Vid2Avatar.","date":"2023-06-29T00:00:00.000Z","formattedDate":"June 29, 2023","tags":[{"label":"paper review","permalink":"/ai-blog/blog/tags/paper-review"},{"label":"AI","permalink":"/ai-blog/blog/tags/ai"}],"readingTime":0.18,"hasTruncateMarker":false,"authors":[{"name":"SeulGi Hong","title":"Vision AI Engineer","url":"https://github.com/sghong977","imageURL":"https://media.licdn.com/dms/image/D5603AQGRf-2u7XRd3Q/profile-displayphoto-shrink_800_800/0/1670852033708?e=1693440000&v=beta&t=1tHwHsKS_UJUw6G2hDlqLYyX0u4Qoi1AKf5Xik_ONoo","key":"seulgi"}],"frontMatter":{"slug":"vid2avatar","title":"Paper Review - 3D Avatar Reconstruction from Videos in the Wild via Self-supervised Scene Decomposition \u200b","authors":["seulgi"],"tags":["paper review","AI"]},"nextItem":{"title":"Welcome","permalink":"/ai-blog/blog/welcome"}},"content":"Today, I\'m going to review the paper for this CVPR 2023, Vid2Avatar.\\n\\n\\n# Summary\\n- \\"Vid2Avatar: 3D Avatar Reconstruction from Videos in the Wild via Self-supervised Scene Decomposition\\"\\n- ETH Z\xfcrich, CVPR 2023, [Project Page](https://moygcc.github.io/vid2avatar/), [Paper](https://files.ait.ethz.ch/projects/vid2avatar/main.pdf)"},{"id":"welcome","metadata":{"permalink":"/ai-blog/blog/welcome","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-06-28-welcome/index.md","source":"@site/blog/2023-06-28-welcome/index.md","title":"Welcome","description":"Hi, welcome to my blog!","date":"2023-06-28T00:00:00.000Z","formattedDate":"June 28, 2023","tags":[{"label":"main","permalink":"/ai-blog/blog/tags/main"},{"label":"AI","permalink":"/ai-blog/blog/tags/ai"}],"readingTime":0.025,"hasTruncateMarker":false,"authors":[{"name":"SeulGi Hong","title":"Vision AI Engineer","url":"https://github.com/sghong977","imageURL":"https://media.licdn.com/dms/image/D5603AQGRf-2u7XRd3Q/profile-displayphoto-shrink_800_800/0/1670852033708?e=1693440000&v=beta&t=1tHwHsKS_UJUw6G2hDlqLYyX0u4Qoi1AKf5Xik_ONoo","key":"seulgi"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["seulgi"],"tags":["main","AI"]},"prevItem":{"title":"Paper Review - 3D Avatar Reconstruction from Videos in the Wild via Self-supervised Scene Decomposition \u200b","permalink":"/ai-blog/blog/vid2avatar"},"nextItem":{"title":"Settings","permalink":"/ai-blog/blog/settings"}},"content":"Hi, welcome to my blog!"},{"id":"settings","metadata":{"permalink":"/ai-blog/blog/settings","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/settings/2023-04-07-settings.md","source":"@site/blog/settings/2023-04-07-settings.md","title":"Settings","description":"Stressful Settings...","date":"2023-04-07T00:00:00.000Z","formattedDate":"April 7, 2023","tags":[{"label":"installation","permalink":"/ai-blog/blog/tags/installation"}],"readingTime":2.44,"hasTruncateMarker":true,"authors":[{"name":"SeulGi Hong","title":"Vision AI Engineer","url":"https://github.com/sghong977","imageURL":"https://media.licdn.com/dms/image/D5603AQGRf-2u7XRd3Q/profile-displayphoto-shrink_800_800/0/1670852033708?e=1693440000&v=beta&t=1tHwHsKS_UJUw6G2hDlqLYyX0u4Qoi1AKf5Xik_ONoo","key":"seulgi"}],"frontMatter":{"slug":"settings","title":"Settings","authors":["seulgi"],"tags":["installation"]},"prevItem":{"title":"Welcome","permalink":"/ai-blog/blog/welcome"}},"content":"Stressful Settings...\\n\\n\\n\x3c!--truncate--\x3e\\n\\n\\n\\n# Dependencies\\n- Detectron2\\n  - python 3.7 >=\\n  - torch 1.8 >=\\n- scikit-learn == 0.22\\n  - it takes a while to set\\n  - pip: Cython\\n  - apt-get: gcc, g++\\n    - [link](https://woowaa.net/entry/gcc-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0)\\n- official neural renderer is tensorflow version.\\n\\n\\n***\\n\\n# Errors\\n### \\"ImportError: libGL.so.1: cannot open shared object file: No such file or directory\\"\\n`apt-get update && apt-get install ffmpeg libsm6 libxext6  -y`\\n\\n### ImportError: (\'Unable to load OpenGL library\', \'OSMesa: cannot open shared object file: No such file or directory\', \'OSMesa\', None)\\n- install OSMesa\\n\\n### AttributeError: \'PosixPath\' object has no attribute \'path\'\\n- [link](https://stackoverflow.com/questions/59693174/attributeerror-posixpath-object-has-no-attribute-path)\\n- [link2](https://ryanking13.github.io/2018/05/22/pathlib.html)\\n- PosixPath? When I print os.name, \'posix\' returned.\\n\\n\\n***\\n\\n# Docker\\n\\n### How to delete &lt;none&gt; docker images?\\n\\n`docker rmi $(docker images -f \\"dangling=true\\" -q)`\\n\\nAfter I tried this, every &lt;none&gt; dockers are deleted.\\n\\n\\n***\\n\\n# Installation\\n\\n### OpenPose\\n- Install guide [link](https://github.com/CMU-Perceptual-Computing-Lab/openpose/blob/master/doc/installation/0_index.md#compiling-and-running-openpose-from-source), [link2](https://jjeamin.github.io/posts/openpose/)\\n- I\'m using Ubuntu server and don\'t have GUI\\n- git clone regressively.\\n- .... I just download openpose docker image. docker pull d0ckaaa/openpose\\n- cmake ..\\n- make -j4`nproc`\\n- how to use: https://viso.ai/deep-learning/openpose/\\n  \\n### OSMesa\\n- Try this. [link](https://pyrender.readthedocs.io/en/latest/install/index.html#installmesa)\\n- Before try this,\\n  - apt-get install wget\\n  - apt-get install pkg-config\\n  - apt-get install libexpat1-dev\\n- i installed in /usr/local\\n- MESA_HOME=/usr/local (+/lib?)\\n- issues\\n  - https://redstarhong.tistory.com/98 GL? PyOpenGL?\\n  - update \\"/opt/conda/lib/python3.9/site-packages/OpenGL/platform/egl.py\\"\\n  - apt-get install libosmesa6-dev\\n  - if PyOpenGL is failed, clone git and reinstall PyOpenGL.\\n  \\n### PHALP  \\nI failed while using conda yml file because:\\n- First, I installed conda inside of a docker container to keep experiments going on.\\n  - when I tried to create conda env, it takes more than an hour to solve dependencies, but it still doesn\'t finished.\\n- Then, I tried to install every commands on my own, neural renderer and cuda path problems occurred.\\n  - It was hard for me to find cuda path in conda env because someone said that each conda environment would only contain the parts of cuda\\n  - So I should export every paths of cuda related stuff, but when I searched cuda paths in my server computer, there are too many other settings, so I\'m not sure what to add\\n- These are the reasons why I didn\'t use conda\\n\\nI use these commands sequentially. After that, demo works well on my docker container.\\nOfficial PHALP\'s colab pip output: [phalp_colab.txt](https://github.com/sghong977/sghong977.github.io/files/11175914/phalp_colab.txt)  \\n  \\n! pip install pyrender  \\n! pip install opencv-python  \\n! pip install joblib  \\n! pip install cython  \\n! pip install scikit-learn==0.22  \\n! pip install scikit-image  \\n! pip install git+https://github.com/facebookresearch/detectron2.git  \\n! pip install git+https://github.com/brjathu/pytube.git  \\n! pip install git+https://github.com/brjathu/NMR.git  \\n! pip install chumpy  \\n! pip install ipython  \\n! pip install gdown  \\n! pip install dill  \\n! pip install scenedetect[opencv]  \\n  \\nBut if you use v1.1, additional packages are needed.\\n- Install OSMesa\\n- pip install smplx submitit rich pyrootutils colordict\\n- pip install -e .\\n- install hydra-core again (Posix error)\\n- python scripts/demo.py video.source=\\\\\'\\"https://www.youtube.com/watch?v=xEH_5T9jMVU\\"\\\\\'\\n  - I use osmesa, not egl\\n![image](https://user-images.githubusercontent.com/46152199/230560634-e9edb760-e566-4d5c-88c1-ea38c4cf3855.png)"}]}')}}]);