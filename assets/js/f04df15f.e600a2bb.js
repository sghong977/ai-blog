"use strict";(self.webpackChunkai_blog=self.webpackChunkai_blog||[]).push([[9130],{5023:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"vid2avatar","metadata":{"permalink":"/ai-blog/blog/vid2avatar","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/paper-reviews/2023-06-29-vid2avatar.md","source":"@site/blog/paper-reviews/2023-06-29-vid2avatar.md","title":"(REVIEW) Vid2Avatar, CVPR 2023","description":"Today, I\'m going to review the paper for this CVPR 2023, Vid2Avatar.","date":"2023-06-29T00:00:00.000Z","formattedDate":"June 29, 2023","tags":[{"label":"paper review","permalink":"/ai-blog/blog/tags/paper-review"},{"label":"AI","permalink":"/ai-blog/blog/tags/ai"}],"readingTime":0.54,"hasTruncateMarker":false,"authors":[{"name":"SeulGi Hong","title":"Vision AI Engineer","url":"https://github.com/sghong977","imageURL":"https://avatars.githubusercontent.com/u/46152199?v=4","key":"seulgi"}],"frontMatter":{"slug":"vid2avatar","title":"(REVIEW) Vid2Avatar, CVPR 2023","authors":"seulgi","tags":["paper review","AI"]},"nextItem":{"title":"Welcome to my blog!","permalink":"/ai-blog/blog/welcome"}},"content":"Today, I\'m going to review the paper for this CVPR 2023, Vid2Avatar.\\n\\n#### \\"Vid2Avatar: 3D Avatar Reconstruction from Videos in the Wild via Self-supervised Scene Decomposition\\"\\n- ETH Z\xfcrich, CVPR 2023, [Project Page](https://moygcc.github.io/vid2avatar/), [Paper](https://files.ait.ethz.ch/projects/vid2avatar/main.pdf)\\n\\n# Summary\\n\\n\\n![image](http://files.ait.ethz.ch/projects/vid2avatar/assets/pipeline.png)\\n\\n- casting the segmentation and surface as a joint 3d optimization problem\\n  - external segmentation model X\\n- spherical space -> sample points are divided into in and out of the sphere\\n- inner space points -> canonical SDF -> resampling the points by making use of surface information -> canonical texture -> render RGB\\n- outer space points (randomly sampled) -> SDF (static scene, background) -> combined with dynamic foreground(human)"},{"id":"welcome","metadata":{"permalink":"/ai-blog/blog/welcome","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-06-28-welcome/index.mdx","source":"@site/blog/2023-06-28-welcome/index.mdx","title":"Welcome to my blog!","description":"Hi, welcome to my blog!","date":"2023-06-28T00:00:00.000Z","formattedDate":"June 28, 2023","tags":[{"label":"main","permalink":"/ai-blog/blog/tags/main"},{"label":"AI","permalink":"/ai-blog/blog/tags/ai"}],"readingTime":0.17,"hasTruncateMarker":false,"authors":[{"name":"SeulGi Hong","title":"Vision AI Engineer","url":"https://github.com/sghong977","imageURL":"https://avatars.githubusercontent.com/u/46152199?v=4","key":"seulgi"}],"frontMatter":{"slug":"welcome","title":"Welcome to my blog!","authors":["seulgi"],"tags":["main","AI"]},"prevItem":{"title":"(REVIEW) Vid2Avatar, CVPR 2023","permalink":"/ai-blog/blog/vid2avatar"},"nextItem":{"title":"(MY NOTE) How to remove caption from images? - Language SAM","permalink":"/ai-blog/blog/captionSAM"}},"content":"Hi, welcome to my blog!\\n\\nimport MyLogo from \'/static/img/docusaurus.png\';\\n\\n<img src={MyLogo} width=\\"200\\"/>\\n\\n\\nI\'ll backup my posts in Tistory blog, my old gitblog, git issues (for survey), and other materials.\\nEverything would be placed here!"},{"id":"captionSAM","metadata":{"permalink":"/ai-blog/blog/captionSAM","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/research-note/2023-06-23-captionSAM.md","source":"@site/blog/research-note/2023-06-23-captionSAM.md","title":"(MY NOTE) How to remove caption from images? - Language SAM","description":"How to remove caption from the video data?","date":"2023-06-23T00:00:00.000Z","formattedDate":"June 23, 2023","tags":[{"label":"Research Note","permalink":"/ai-blog/blog/tags/research-note"},{"label":"Segment Anything Model","permalink":"/ai-blog/blog/tags/segment-anything-model"},{"label":"Text Segmentation","permalink":"/ai-blog/blog/tags/text-segmentation"}],"readingTime":2.925,"hasTruncateMarker":false,"authors":[{"name":"SeulGi Hong","title":"Vision AI Engineer","url":"https://github.com/sghong977","imageURL":"https://avatars.githubusercontent.com/u/46152199?v=4","key":"seulgi"}],"frontMatter":{"slug":"captionSAM","title":"(MY NOTE) How to remove caption from images? - Language SAM","authors":"seulgi","tags":["Research Note","Segment Anything Model","Text Segmentation"]},"prevItem":{"title":"Welcome to my blog!","permalink":"/ai-blog/blog/welcome"},"nextItem":{"title":"(DEBUG) Settings","permalink":"/ai-blog/blog/settings"}},"content":"How to remove caption from the video data?\\n\\n\\n## Task\\n- **Goal**\\n  - I want to remove caption area from images\\n  - Output sholud be like bbox, or non-rectangular mask only for the text area. Format doesn\'t matter but the later one is better to keep more information on remain scene\\n- **Issue**\\n  - prefer to use **generalized pretrained model**\\n  - Fully Automatic: without any supervision from human (without GUI prompt)\\n  - speed matters\\n\\n\\n## How?\\n**1. OCR**\\nFirst of all, optical character recognition would be a nice and trustful approach because it has been a long-lasting computer vision task.\\n- **Scene Text Detection (Localization)**: to get bbox area of the text in the image\\n  - e.g., CRAFT [https://github.com/clovaai/CRAFT-pytorch](https://github.com/clovaai/CRAFT-pytorch) provides the pre-trained model\\n- Scene Text Recognition: I don\'t need this part\\n\\n**2. Generalized Segmentation Model**\\nThese days, \\"Segment Anything\\" is a trending topic in the field of computer vision. Therefore, I am examining the performance of SAM in masking text areas, and conducting a survey on follow-up studies.\\n\\n\\n## Step 1. What is SAM?\\nI believe the scene text detection task is well-known and has already achieved satisfactory performance. Therefore, I will explore how SAM works for my specific task.\\n\\n\\n- **Generalization**: SAM is general enough to cover a broad set of use cases and can be used out of the box on new image domains \u2014 whether underwater photos or cell microscopy \u2014 without requiring additional training (a capability often referred to as zero-shot transfer).\\n- **Time Cost**: using light-weight for the real-time inference\\n- **Promptable Segmentation Task**: take various prompts to train for enabling a valid segmentation even with the ambiguous inputs\\n  - e.g., Forground, Backgroud Points / Bounding Box / Masks / Free-form Text are defined as prompts.\\n  - But free-form text is not released (2023.04.06)\\n\\n\\n**How the model looks like:**\\n- To summarize, the model composed of 3 parts. image encoder, prompt encoder, and decoder.\\n- image encoder: MAE (Masked Auto-Encoder), takes 1024x1024 sized input, using pretrained ViT\\n- prompt encoder: the model convert any types of prompt to 256 dim.\\n  - text: using CLIP embedding\\n  - fg/bg or bbox: using 2 points (NN)\\n  - Mask: using CNN to reduce size and the last, 1*1 conv generates 256 dim code\\n![img](https://scontent-gmp1-1.xx.fbcdn.net/v/t39.2365-6/338558258_1349701259095991_4358060436604292355_n.png?_nc_cat=104&ccb=1-7&_nc_sid=ad8a9d&_nc_ohc=6YFtfSFN9TkAX9KWrZS&_nc_ht=scontent-gmp1-1.xx&oh=00_AfBir_KH9omTbT4lVU6Gx7XOIQ21vb_ytXcNu9ikPmO8XA&oe=649F0109)\\n\\n\\n**Dataset: SA-1B**\\n- COCO run-length encoding (RLE) annotation format\\n- provides 11M images and the huge amount of class agnostic, only for the research purpose (the mask doesn\'t contains the category!)\\n- masks are autogenerated by SAM\\n- you can request validation set, which is randomly sampled and annotated from human annotators.\\n\\n\\n**My comments:**\\nI need a fully automatic process but finding fg&bg or bbox would be an additional task. Luckly, I find a nice open-source project to tackle this!\\n\\n\\nHowever, Language SAM is not exactly the same as the original SAM architecture, since Language SAM is relying on text-to-bbox approach by combining SAM and GroundingDINO.\\n- [GroundingDINO](https://github.com/IDEA-Research/GroundingDINO)\\n- [Segment-Anything](https://github.com/facebookresearch/segment-anything)\\n- GUI is available by [Lightning AI](https://github.com/Lightning-AI/lightning)! (but i didn\'t check this)\\n\\n\\n\\n## Step 2. Let\'s try Language SAM\\nLet\'s go back to our task, removing caption area.\\nLanguage segment anything model: [github link](https://github.com/luca-medeiros/lang-segment-anything)\\n\\n``` Bash\\npip install torch torchvision\\npip install -U git+https://github.com/luca-medeiros/lang-segment-anything.git\\n```\\n\\n**Outputs**\\n- The output is consists of instances, and each of them contain **binary mask, bounding box, phrase, logit**.\\n![image](https://github.com/sghong977/sghong977.github.io/assets/46152199/39aacc96-cea3-4ec6-bb6e-b31f7fcf146e)\\n\\nI didn\'t upload the output due to the copyright issue, but I\'ll add some visualization later on.\\n\\n\\nReferences\\n- Language SAM [https://github.com/luca-medeiros/lang-segment-anything](https://github.com/luca-medeiros/lang-segment-anything)\\n- [https://lightning.ai/pages/community/lang-segment-anything-object-detection-and-segmentation-with-text-prompt/](https://lightning.ai/pages/community/lang-segment-anything-object-detection-and-segmentation-with-text-prompt/)\\n- facebook [post](https://ai.facebook.com/blog/segment-anything-foundation-model-image-segmentation/?ref=blog.annotation-ai.com)\\n- (KR) Explanation about SAM details [https://blog.annotation-ai.com/segment-anything/](https://blog.annotation-ai.com/segment-anything/)"},{"id":"settings","metadata":{"permalink":"/ai-blog/blog/settings","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/settings/2023-04-07-settings.md","source":"@site/blog/settings/2023-04-07-settings.md","title":"(DEBUG) Settings","description":"Stressful Settings...","date":"2023-04-07T00:00:00.000Z","formattedDate":"April 7, 2023","tags":[{"label":"installation","permalink":"/ai-blog/blog/tags/installation"}],"readingTime":2.44,"hasTruncateMarker":true,"authors":[{"name":"SeulGi Hong","title":"Vision AI Engineer","url":"https://github.com/sghong977","imageURL":"https://avatars.githubusercontent.com/u/46152199?v=4","key":"seulgi"}],"frontMatter":{"slug":"settings","title":"(DEBUG) Settings","authors":["seulgi"],"tags":["installation"]},"prevItem":{"title":"(MY NOTE) How to remove caption from images? - Language SAM","permalink":"/ai-blog/blog/captionSAM"}},"content":"Stressful Settings...\\n\\n\\n\x3c!--truncate--\x3e\\n\\n\\n\\n# Dependencies\\n- Detectron2\\n  - python 3.7 >=\\n  - torch 1.8 >=\\n- scikit-learn == 0.22\\n  - it takes a while to set\\n  - pip: Cython\\n  - apt-get: gcc, g++\\n    - [link](https://woowaa.net/entry/gcc-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0)\\n- official neural renderer is tensorflow version.\\n\\n\\n***\\n\\n# Errors\\n### \\"ImportError: libGL.so.1: cannot open shared object file: No such file or directory\\"\\n`apt-get update && apt-get install ffmpeg libsm6 libxext6  -y`\\n\\n### ImportError: (\'Unable to load OpenGL library\', \'OSMesa: cannot open shared object file: No such file or directory\', \'OSMesa\', None)\\n- install OSMesa\\n\\n### AttributeError: \'PosixPath\' object has no attribute \'path\'\\n- [link](https://stackoverflow.com/questions/59693174/attributeerror-posixpath-object-has-no-attribute-path)\\n- [link2](https://ryanking13.github.io/2018/05/22/pathlib.html)\\n- PosixPath? When I print os.name, \'posix\' returned.\\n\\n\\n***\\n\\n# Docker\\n\\n### How to delete &lt;none&gt; docker images?\\n\\n`docker rmi $(docker images -f \\"dangling=true\\" -q)`\\n\\nAfter I tried this, every &lt;none&gt; dockers are deleted.\\n\\n\\n***\\n\\n# Installation\\n\\n### OpenPose\\n- Install guide [link](https://github.com/CMU-Perceptual-Computing-Lab/openpose/blob/master/doc/installation/0_index.md#compiling-and-running-openpose-from-source), [link2](https://jjeamin.github.io/posts/openpose/)\\n- I\'m using Ubuntu server and don\'t have GUI\\n- git clone regressively.\\n- .... I just download openpose docker image. docker pull d0ckaaa/openpose\\n- cmake ..\\n- make -j4`nproc`\\n- how to use: https://viso.ai/deep-learning/openpose/\\n  \\n### OSMesa\\n- Try this. [link](https://pyrender.readthedocs.io/en/latest/install/index.html#installmesa)\\n- Before try this,\\n  - apt-get install wget\\n  - apt-get install pkg-config\\n  - apt-get install libexpat1-dev\\n- i installed in /usr/local\\n- MESA_HOME=/usr/local (+/lib?)\\n- issues\\n  - https://redstarhong.tistory.com/98 GL? PyOpenGL?\\n  - update \\"/opt/conda/lib/python3.9/site-packages/OpenGL/platform/egl.py\\"\\n  - apt-get install libosmesa6-dev\\n  - if PyOpenGL is failed, clone git and reinstall PyOpenGL.\\n  \\n### PHALP  \\nI failed while using conda yml file because:\\n- First, I installed conda inside of a docker container to keep experiments going on.\\n  - when I tried to create conda env, it takes more than an hour to solve dependencies, but it still doesn\'t finished.\\n- Then, I tried to install every commands on my own, neural renderer and cuda path problems occurred.\\n  - It was hard for me to find cuda path in conda env because someone said that each conda environment would only contain the parts of cuda\\n  - So I should export every paths of cuda related stuff, but when I searched cuda paths in my server computer, there are too many other settings, so I\'m not sure what to add\\n- These are the reasons why I didn\'t use conda\\n\\nI use these commands sequentially. After that, demo works well on my docker container.\\nOfficial PHALP\'s colab pip output: [phalp_colab.txt](https://github.com/sghong977/sghong977.github.io/files/11175914/phalp_colab.txt)  \\n  \\n! pip install pyrender  \\n! pip install opencv-python  \\n! pip install joblib  \\n! pip install cython  \\n! pip install scikit-learn==0.22  \\n! pip install scikit-image  \\n! pip install git+https://github.com/facebookresearch/detectron2.git  \\n! pip install git+https://github.com/brjathu/pytube.git  \\n! pip install git+https://github.com/brjathu/NMR.git  \\n! pip install chumpy  \\n! pip install ipython  \\n! pip install gdown  \\n! pip install dill  \\n! pip install scenedetect[opencv]  \\n  \\nBut if you use v1.1, additional packages are needed.\\n- Install OSMesa\\n- pip install smplx submitit rich pyrootutils colordict\\n- pip install -e .\\n- install hydra-core again (Posix error)\\n- python scripts/demo.py video.source=\\\\\'\\"https://www.youtube.com/watch?v=xEH_5T9jMVU\\"\\\\\'\\n  - I use osmesa, not egl\\n![image](https://user-images.githubusercontent.com/46152199/230560634-e9edb760-e566-4d5c-88c1-ea38c4cf3855.png)"}]}')}}]);